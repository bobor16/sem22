/*
 * generated by Xtext 2.25.0
 */
grammar InternalGarden;

options {
	superClass=AbstractInternalAntlrParser;
}

@lexer::header {
package org.xtext.example.mydsl.parser.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.parser.antlr.Lexer;
}

@parser::header {
package org.xtext.example.mydsl.parser.antlr.internal;

import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.AbstractInternalAntlrParser;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.parser.antlr.AntlrDatatypeRuleToken;
import org.xtext.example.mydsl.services.GardenGrammarAccess;

}

@parser::members {

 	private GardenGrammarAccess grammarAccess;

    public InternalGardenParser(TokenStream input, GardenGrammarAccess grammarAccess) {
        this(input);
        this.grammarAccess = grammarAccess;
        registerRules(grammarAccess.getGrammar());
    }

    @Override
    protected String getFirstRuleName() {
    	return "MetaModel";
   	}

   	@Override
   	protected GardenGrammarAccess getGrammarAccess() {
   		return grammarAccess;
   	}

}

@rulecatch {
    catch (RecognitionException re) {
        recover(input,re);
        appendSkippedTokens();
    }
}

// Entry rule entryRuleMetaModel
entryRuleMetaModel returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getMetaModelRule()); }
	iv_ruleMetaModel=ruleMetaModel
	{ $current=$iv_ruleMetaModel.current; }
	EOF;

// Rule MetaModel
ruleMetaModel returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='application'
		{
			newLeafNode(otherlv_0, grammarAccess.getMetaModelAccess().getApplicationKeyword_0());
		}
		(
			(
				lv_name_1_0=RULE_ID
				{
					newLeafNode(lv_name_1_0, grammarAccess.getMetaModelAccess().getNameIDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getMetaModelRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_1_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getMetaModelAccess().getComponentsComponentParserRuleCall_2_0());
				}
				lv_components_2_0=ruleComponent
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getMetaModelRule());
					}
					add(
						$current,
						"components",
						lv_components_2_0,
						"org.xtext.example.mydsl.Garden.Component");
					afterParserOrEnumRuleCall();
				}
			)
		)*
	)
;

// Entry rule entryRuleComponent
entryRuleComponent returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getComponentRule()); }
	iv_ruleComponent=ruleComponent
	{ $current=$iv_ruleComponent.current; }
	EOF;

// Rule Component
ruleComponent returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='component'
		{
			newLeafNode(otherlv_0, grammarAccess.getComponentAccess().getComponentKeyword_0());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getComponentAccess().getNameComponentTypeParserRuleCall_1_0());
				}
				lv_name_1_0=ruleComponentType
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getComponentRule());
					}
					set(
						$current,
						"name",
						lv_name_1_0,
						"org.xtext.example.mydsl.Garden.ComponentType");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_2='{'
		{
			newLeafNode(otherlv_2, grammarAccess.getComponentAccess().getLeftCurlyBracketKeyword_2());
		}
		otherlv_3='address'
		{
			newLeafNode(otherlv_3, grammarAccess.getComponentAccess().getAddressKeyword_3());
		}
		otherlv_4='='
		{
			newLeafNode(otherlv_4, grammarAccess.getComponentAccess().getEqualsSignKeyword_4());
		}
		(
			(
				lv_byte01_5_0=RULE_STRING
				{
					newLeafNode(lv_byte01_5_0, grammarAccess.getComponentAccess().getByte01STRINGTerminalRuleCall_5_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getComponentRule());
					}
					setWithLastConsumed(
						$current,
						"byte01",
						lv_byte01_5_0,
						"org.eclipse.xtext.common.Terminals.STRING");
				}
			)
		)
		otherlv_6=','
		{
			newLeafNode(otherlv_6, grammarAccess.getComponentAccess().getCommaKeyword_6());
		}
		(
			(
				lv_byte02_7_0=RULE_STRING
				{
					newLeafNode(lv_byte02_7_0, grammarAccess.getComponentAccess().getByte02STRINGTerminalRuleCall_7_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getComponentRule());
					}
					setWithLastConsumed(
						$current,
						"byte02",
						lv_byte02_7_0,
						"org.eclipse.xtext.common.Terminals.STRING");
				}
			)
		)
		otherlv_8=','
		{
			newLeafNode(otherlv_8, grammarAccess.getComponentAccess().getCommaKeyword_8());
		}
		(
			(
				lv_byte03_9_0=RULE_STRING
				{
					newLeafNode(lv_byte03_9_0, grammarAccess.getComponentAccess().getByte03STRINGTerminalRuleCall_9_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getComponentRule());
					}
					setWithLastConsumed(
						$current,
						"byte03",
						lv_byte03_9_0,
						"org.eclipse.xtext.common.Terminals.STRING");
				}
			)
		)
		otherlv_10=','
		{
			newLeafNode(otherlv_10, grammarAccess.getComponentAccess().getCommaKeyword_10());
		}
		(
			(
				lv_byte04_11_0=RULE_STRING
				{
					newLeafNode(lv_byte04_11_0, grammarAccess.getComponentAccess().getByte04STRINGTerminalRuleCall_11_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getComponentRule());
					}
					setWithLastConsumed(
						$current,
						"byte04",
						lv_byte04_11_0,
						"org.eclipse.xtext.common.Terminals.STRING");
				}
			)
		)
		otherlv_12=','
		{
			newLeafNode(otherlv_12, grammarAccess.getComponentAccess().getCommaKeyword_12());
		}
		(
			(
				lv_byte05_13_0=RULE_STRING
				{
					newLeafNode(lv_byte05_13_0, grammarAccess.getComponentAccess().getByte05STRINGTerminalRuleCall_13_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getComponentRule());
					}
					setWithLastConsumed(
						$current,
						"byte05",
						lv_byte05_13_0,
						"org.eclipse.xtext.common.Terminals.STRING");
				}
			)
		)
		otherlv_14=','
		{
			newLeafNode(otherlv_14, grammarAccess.getComponentAccess().getCommaKeyword_14());
		}
		(
			(
				lv_byte06_15_0=RULE_STRING
				{
					newLeafNode(lv_byte06_15_0, grammarAccess.getComponentAccess().getByte06STRINGTerminalRuleCall_15_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getComponentRule());
					}
					setWithLastConsumed(
						$current,
						"byte06",
						lv_byte06_15_0,
						"org.eclipse.xtext.common.Terminals.STRING");
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getComponentAccess().getDevicesDeviceParserRuleCall_16_0());
				}
				lv_devices_16_0=ruleDevice
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getComponentRule());
					}
					add(
						$current,
						"devices",
						lv_devices_16_0,
						"org.xtext.example.mydsl.Garden.Device");
					afterParserOrEnumRuleCall();
				}
			)
		)*
		otherlv_17='}'
		{
			newLeafNode(otherlv_17, grammarAccess.getComponentAccess().getRightCurlyBracketKeyword_17());
		}
	)
;

// Entry rule entryRuleComponentType
entryRuleComponentType returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getComponentTypeRule()); }
	iv_ruleComponentType=ruleComponentType
	{ $current=$iv_ruleComponentType.current; }
	EOF;

// Rule ComponentType
ruleComponentType returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				lv_type_0_0='WaterController'
				{
					newLeafNode(lv_type_0_0, grammarAccess.getComponentTypeAccess().getTypeWaterControllerKeyword_0_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getComponentTypeRule());
					}
					setWithLastConsumed($current, "type", lv_type_0_0, "WaterController");
				}
			)
		)
		    |
		(
			(
				lv_type_1_0='GatewayController'
				{
					newLeafNode(lv_type_1_0, grammarAccess.getComponentTypeAccess().getTypeGatewayControllerKeyword_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getComponentTypeRule());
					}
					setWithLastConsumed($current, "type", lv_type_1_0, "GatewayController");
				}
			)
		)
		    |
		(
			(
				lv_type_2_0='GardenController'
				{
					newLeafNode(lv_type_2_0, grammarAccess.getComponentTypeAccess().getTypeGardenControllerKeyword_2_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getComponentTypeRule());
					}
					setWithLastConsumed($current, "type", lv_type_2_0, "GardenController");
				}
			)
		)
	)
;

// Entry rule entryRuleDevice
entryRuleDevice returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getDeviceRule()); }
	iv_ruleDevice=ruleDevice
	{ $current=$iv_ruleDevice.current; }
	EOF;

// Rule Device
ruleDevice returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='device'
		{
			newLeafNode(otherlv_0, grammarAccess.getDeviceAccess().getDeviceKeyword_0());
		}
		otherlv_1='='
		{
			newLeafNode(otherlv_1, grammarAccess.getDeviceAccess().getEqualsSignKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getDeviceAccess().getDeviceTypeDeviceTypeParserRuleCall_2_0());
				}
				lv_deviceType_2_0=ruleDeviceType
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getDeviceRule());
					}
					set(
						$current,
						"deviceType",
						lv_deviceType_2_0,
						"org.xtext.example.mydsl.Garden.DeviceType");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_3='@input'
			{
				newLeafNode(otherlv_3, grammarAccess.getDeviceAccess().getInputKeyword_3_0());
			}
			otherlv_4='#'
			{
				newLeafNode(otherlv_4, grammarAccess.getDeviceAccess().getNumberSignKeyword_3_1());
			}
			(
				(
					lv_inputPin_5_0=RULE_INT
					{
						newLeafNode(lv_inputPin_5_0, grammarAccess.getDeviceAccess().getInputPinINTTerminalRuleCall_3_2_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getDeviceRule());
						}
						setWithLastConsumed(
							$current,
							"inputPin",
							lv_inputPin_5_0,
							"org.eclipse.xtext.common.Terminals.INT");
					}
				)
			)
		)?
	)
;

// Entry rule entryRuleDeviceType
entryRuleDeviceType returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getDeviceTypeRule()); }
	iv_ruleDeviceType=ruleDeviceType
	{ $current=$iv_ruleDeviceType.current; }
	EOF;

// Rule DeviceType
ruleDeviceType returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					$current = forceCreateModelElement(
						grammarAccess.getDeviceTypeAccess().getMoistureSensorAction_0_0(),
						$current);
				}
			)
			(
				(
					lv_name_1_0='MoistureSensor'
					{
						newLeafNode(lv_name_1_0, grammarAccess.getDeviceTypeAccess().getNameMoistureSensorKeyword_0_1_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getDeviceTypeRule());
						}
						setWithLastConsumed($current, "name", lv_name_1_0, "MoistureSensor");
					}
				)
			)
		)
		    |
		(
			(
				{
					$current = forceCreateModelElement(
						grammarAccess.getDeviceTypeAccess().getWaterPumpActuatorAction_1_0(),
						$current);
				}
			)
			(
				(
					lv_name_3_0='WaterPumpActuator'
					{
						newLeafNode(lv_name_3_0, grammarAccess.getDeviceTypeAccess().getNameWaterPumpActuatorKeyword_1_1_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getDeviceTypeRule());
						}
						setWithLastConsumed($current, "name", lv_name_3_0, "WaterPumpActuator");
					}
				)
			)
		)
		    |
		(
			(
				{
					$current = forceCreateModelElement(
						grammarAccess.getDeviceTypeAccess().getTemperatureSensorAction_2_0(),
						$current);
				}
			)
			(
				(
					lv_name_5_0='TemperatureSensor'
					{
						newLeafNode(lv_name_5_0, grammarAccess.getDeviceTypeAccess().getNameTemperatureSensorKeyword_2_1_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getDeviceTypeRule());
						}
						setWithLastConsumed($current, "name", lv_name_5_0, "TemperatureSensor");
					}
				)
			)
		)
		    |
		(
			(
				{
					$current = forceCreateModelElement(
						grammarAccess.getDeviceTypeAccess().getUltraSonicSensorAction_3_0(),
						$current);
				}
			)
			(
				(
					lv_name_7_0='UltraSonicSensor'
					{
						newLeafNode(lv_name_7_0, grammarAccess.getDeviceTypeAccess().getNameUltraSonicSensorKeyword_3_1_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getDeviceTypeRule());
						}
						setWithLastConsumed($current, "name", lv_name_7_0, "UltraSonicSensor");
					}
				)
			)
		)
	)
;

RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' .|~(('\\'|'"')))* '"'|'\'' ('\\' .|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;
